version: '2.4'

services:
  app:
    build: 
      context: .
      dockerfile: ./docker/remote_retro_app/Dockerfile
    image: remote_retro_app
    ports: 
      - "4000:4000"
      - "5001:5001"
    depends_on: 
      - "db"
    # command: [ "tail", "-f", "/dev/null" ]    
    command: ["dockerize", "-wait", "tcp://db:5432", "-timeout", "30s", "--", "tail", "-f", "/dev/null"]  
    # TODO: a script that already run mix deps.clean --all && mix deps.get && mix.deps.compile && ecto.create && ecto.migrate, mix ?  
    environment:
      - RETRO_DB_HOST=db
      - REMOTE_RETRO_GOOGLE_OAUTH_CLIENT_ID
      - REMOTE_RETRO_GOOGLE_OAUTH_CLIENT_SECRET
      - REMOTE_RETRO_GOOGLE_OAUTH_REDIRECT_URI
    volumes:
      - ".:/app"  

  db:
    build: 
      context: .
      dockerfile: ./docker/remote_retro_db/Dockerfile
    image: remote_retro_db
    ports: 
      - "5432:5432"
    # depends_on: 
    #   - "db"
    # command: ["dockerize", "-wait", "tcp://db:3306", "-timeout", "30s", "--", "sh", "-c", "/entrypoint.sh"]    
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=remote_retro_dev
      # - RETRO_DB_DATABASE: remote_retro_dev

# volumes:
#   app:

        